// <auto-generated />
using System;
using InstantMessenger.Profiles.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InstantMessenger.Profiles.Infrastructure.Database.Migrations
{
    [DbContext(typeof(ProfilesContext))]
    [Migration("20201115174817_RemoveNicknameFromProfile")]
    partial class RemoveNicknameFromProfile
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Profiles")
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InstantMessenger.Profiles.Domain.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_ProfileId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("InstantMessenger.Profiles.Domain.Profile", b =>
                {
                    b.OwnsOne("InstantMessenger.Profiles.Domain.Avatar", "Avatar", b1 =>
                        {
                            b1.Property<Guid>("ProfileId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<byte[]>("Value")
                                .IsRequired()
                                .HasColumnName("Avatar")
                                .HasColumnType("varbinary(max)");

                            b1.HasKey("ProfileId");

                            b1.ToTable("Profiles");

                            b1.WithOwner()
                                .HasForeignKey("ProfileId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
