// <auto-generated />
using System;
using InstantMessenger.Groups.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InstantMessenger.Groups.Infrastructure.Database.Migrations
{
    [DbContext(typeof(GroupsContext))]
    [Migration("20201115201736_AddRoles")]
    partial class AddRoles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Groups")
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InstantMessenger.Groups.Domain.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id")
                        .HasName("PK_Groups");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("InstantMessenger.Groups.Domain.Entities.Group", b =>
                {
                    b.OwnsMany("InstantMessenger.Groups.Domain.Entities.Member", "Members", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTimeOffset>("CreatedAt")
                                .HasColumnType("datetimeoffset");

                            b1.Property<Guid>("GroupId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool>("IsOwner")
                                .HasColumnType("bit");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id")
                                .HasName("PK_Members");

                            b1.HasIndex("GroupId");

                            b1.ToTable("Members");

                            b1.WithOwner()
                                .HasForeignKey("GroupId");

                            b1.OwnsMany("InstantMessenger.Groups.Domain.ValueObjects.RoleId", "Roles", b2 =>
                                {
                                    b2.Property<Guid>("Value")
                                        .HasColumnName("RoleId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("MemberId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.HasKey("Value", "MemberId");

                                    b2.HasIndex("MemberId");

                                    b2.ToTable("MemberRoles");

                                    b2.WithOwner()
                                        .HasForeignKey("MemberId");
                                });
                        });

                    b.OwnsMany("InstantMessenger.Groups.Domain.Entities.Role", "Roles", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("GroupId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Permissions")
                                .HasColumnType("int");

                            b1.Property<int>("Priority")
                                .HasColumnType("int");

                            b1.HasKey("Id")
                                .HasName("PK_Roles");

                            b1.HasIndex("GroupId");

                            b1.ToTable("Roles");

                            b1.WithOwner()
                                .HasForeignKey("GroupId");
                        });

                    b.OwnsOne("InstantMessenger.Groups.Domain.ValueObjects.GroupName", "Name", b1 =>
                        {
                            b1.Property<Guid>("GroupId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnName("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("GroupId");

                            b1.ToTable("Groups");

                            b1.WithOwner()
                                .HasForeignKey("GroupId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
