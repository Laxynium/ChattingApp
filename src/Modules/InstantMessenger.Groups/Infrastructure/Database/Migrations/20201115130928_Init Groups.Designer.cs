// <auto-generated />
using System;
using InstantMessenger.Groups.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InstantMessenger.Groups.Infrastructure.Database.Migrations
{
    [DbContext(typeof(GroupsContext))]
    [Migration("20201115130928_Init Groups")]
    partial class InitGroups
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Groups")
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InstantMessenger.Groups.Domain.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id")
                        .HasName("PK_Groups");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("InstantMessenger.Groups.Domain.Group", b =>
                {
                    b.OwnsOne("InstantMessenger.Groups.Domain.GroupName", "Name", b1 =>
                        {
                            b1.Property<Guid>("GroupId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnName("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("GroupId");

                            b1.ToTable("Groups");

                            b1.WithOwner()
                                .HasForeignKey("GroupId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
